/* Programa feito por Cesar Augusto Alves Camillo GRR 20160169 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

char **dict; /* dict é um ponteiro para ponteiro de char que guardara o dicionario na memoria */

int compara_string (void const *a, void const *b) /* função que arruma a tipagem de strcmp para uso no qsort e bsearch */
{
  const char **aa=(const char**)a;
  const char **bb=(const char**)b;
  return strcmp(*aa,*bb);
}

int main ()
{
  FILE *arq; /* abrindo o arquivo do dicionário */
  char palavra[55], carac, *inD; /* duas variáveis para guardar strings, leitura de caracteres, verificação do bsearch */
  int i, j; /* contadores dos for */
  arq = fopen ("/usr/share/dict/brazilian", "r"); /* abre o arquivo e depois verifica erro */
  if (! arq)
    {
      perror ("Erro ao abrir dicionário.");
      exit (1);
    }
  dict = calloc (275502, sizeof(char*)); /* aloca o vetor para todas as palavras do dicionário */
  for (i=0;i < 275502; i++) /* aloca as palavras do dicionário para cada posição do vetor */
    {
      fscanf (arq, "%s", palavra);
      dict[i] = malloc (55*sizeof(char));
      for (j = 0; palavra[j]; j++)
	palavra[j] = tolower(palavra[j]);
      strcpy (dict[i],palavra);
    }
  
   qsort (dict, 275502, sizeof(char*), compara_string); //faz o sort de tudo
 

  scanf("%c", &carac);
  while (carac != EOF)
    {
      while ((carac < 'A' || carac > 'z' || (carac > 'Z' && carac < 'a'))  && (carac != EOF))
	{
	  putchar (carac);
	  scanf("%c", &carac);
	}
      
      i = 0;
      char* palavra = NULL;
      while (((carac >= 'A' && carac <= 'Z') || (carac >= 'a' && carac <= 'z')) && (carac != EOF))
	{
	  palavra[i] = carac;
	  scanf("%c", &carac);
	}
      palavra[i+1] = '\0';
      printf ("%s\n", palavra);
      
      if (palavra != NULL)
	{
	  inD = (char*)bsearch (palavra, dict, 275502, sizeof(char *), compara_string);
	  if (inD != NULL)
	    puts(palavra);
	  else
	    printf ("[%s]", palavra);
	}
    }
  fclose(arq);
  free(dict);
  return 0;
}
